package пакСтрВеб

/*
	Модуль предоставляет тип организации веб-страниц
*/

import (
	мФмт "fmt"
	мСтр "strings"
)

//ТСтрВеб -- тип для конструирования интернет страниц
type ТСтрВеб struct {
	тело   string
	хтмл   string
	шапка  string
	подвал string
}

const (
	шблШапка = `<!DOCTYPE HTML>
<HTML>
<HEAD>
<TITLE>{название}</TITLE>
<META charset="utf-8">
</HEAD>
<BODY>`
	шблПодвал = `<BR>
{подвал}
</BODY>
</HTML>`
	шблТело = `
{меню}
{тело}`
)

//СтрВебНов -- возвращает ссылку на новый ТСтрВеб
func СтрВебНов(пШапка string) (стр *ТСтрВеб, ош error) {
	стр = &ТСтрВеб{}
	if стр == nil {
		return nil, мФмт.Errorf("СтрВебНов(): нет памяти для новой страницы?\n")
	}
	стр._ШапкаУст(пШапка)
	стр._ПодвалУст("Powered with golang")
	return стр, nil
}

//Получ -- возвращает целиком хтмл-страницу
func (сам *ТСтрВеб) Получ() string {
	хтмл := сам.шапка + сам.тело + сам.подвал
	return хтмл
}

//Устанавливает шапку страницы
func (сам *ТСтрВеб) _ШапкаУст(пНазвание string) {
	сам.шапка = мСтр.ReplaceAll(шблШапка, "{название}", пНазвание)
}

//Устанавливает подвал страницы
func (сам *ТСтрВеб) _ПодвалУст(пПодвал string) {
	сам.подвал = мСтр.ReplaceAll(шблПодвал, "{подвал}", пПодвал)
}

//ТелоУст -- устанавливает тело страницы
func (сам *ТСтрВеб) ТелоУст(пТело string) {
	сам.тело = мСтр.ReplaceAll(шблТело, "{меню}", шрифтМеню+меню+"</font>")
	сам.тело = мСтр.ReplaceAll(сам.тело, "{тело}", пТело)
}
